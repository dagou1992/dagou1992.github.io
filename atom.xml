<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dagou&#39;s Notes</title>
  
  <subtitle>你，是自在如风的少年。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-28T09:06:17.925Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jinbangqiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>10行代码实现页面无限滚动</title>
    <link href="http://yoursite.com/2018/08/28/10%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E9%A1%B5%E9%9D%A2%E6%97%A0%E9%99%90%E6%BB%9A%E5%8A%A8/"/>
    <id>http://yoursite.com/2018/08/28/10行代码实现页面无限滚动/</id>
    <published>2018-08-28T07:50:25.000Z</published>
    <updated>2018-08-28T09:06:17.925Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/08/28/10行代码实现页面无限滚动/project.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;背景：&quot;&gt;&lt;a href=&quot;#背景：&quot; class=&quot;headerlink&quot; title=&quot;背景：&quot;&gt;&lt;/a&gt;背景：&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;由于网页的执行都是单线程的，在JS执行的过程中，页面会呈现阻塞状态。因此，如果JS处理的数据量过大，过程复杂，可能会造成页面的卡顿。传统的数据展现都以分页的形式，但是分页的效果并不好，需要用户手动点击下一页，才能看到更多的内容。有很多网站使用无限分页的模式，即网页视窗到达内容底部就自动加载下一部分的内容…&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;原理：&quot;&gt;&lt;a href=&quot;#原理：&quot; class=&quot;headerlink&quot; title=&quot;原理：&quot;&gt;&lt;/a&gt;原理：&lt;/h1&gt;&lt;p&gt;实现无限分页的过程大致如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 视窗滚动到底部；&lt;/li&gt;
&lt;li&gt;2 触发加载，添加到现有内容的后面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，可能会出现两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 当页面的内容很少，没有出现滚动条；触发加载页面事件，直到加载到满足条件时停止加载；&lt;/li&gt;
&lt;li&gt;2 当页面的内容很多，出现了滚动条&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
</feed>
